-- 1. 커미션이 null이라면 커미션 값을 0으로 대입하여 이름, 부서, 입사일, 직무,
--     급여, 커미션, 그리고 년봉을 출력하세요.
SELECT NVL(COMMISSION_PCT, 0), FIRST_NAME, DEPARTMENT_ID, HIRE_DATE, JOB_ID, SALARY, SALARY * 12 AS YEAR_SALARY
FROM HR.EMPLOYEES;
---2. 03/06/17이후에 입사한 사람은?
SELECT HIRE_DATE, EMPLOYEE_ID, FIRST_NAME
FROM HR.EMPLOYEES
WHERE TO_DATE(HIRE_DATE, 'YY/MM/DD') > TO_DATE('03/06/17', 'YY/MM/DD');
---3. 17/06/03(일월년)이후에 입사한 사람은?
SELECT HIRE_DATE, EMPLOYEE_ID, FIRST_NAME
FROM HR.EMPLOYEES
WHERE TO_DATE(HIRE_DATE, 'YY/MM/DD') > TO_DATE('17/06/03', 'DD/MM/YY');

--4. 06/17/03(월일년)이후에 입사한 사람은?
SELECT HIRE_DATE, EMPLOYEE_ID, FIRST_NAME
FROM HR.EMPLOYEES
WHERE TO_DATE(HIRE_DATE, 'YY/MM/DD') > TO_DATE('06/17/03', 'MM/DD/YY');

--5.. 문자 변환함수 : 날짜를 문자 변환
-- 현재날짜를 년-월-일, 일-월년, 세기년-월-일, 세기년-월-일 시:분:초 오전/오후, 세기년-월-일 24시:분:초 오전/오후 등으로 출력
SELECT TO_CHAR(SYSDATE), TO_CHAR(SYSDATE, 'YY/MM/DD'), TO_CHAR(SYSDATE, 'DD/MM/YY'),
TO_CHAR(SYSDATE, 'RRRR/MM/DD'), TO_CHAR(SYSDATE, 'RRRR/MM/DD HH:MM:SS AM'),
TO_CHAR(SYSDATE, 'RRRR/MM/DD HH24:MM:SS AM')
FROM DUAL;
-- 6. 25-04-2003 보다 늦게 입사한 사람을 출력하는 쿼리이다 두 쿼리는 어떻게 다른지 기술하시오. 
1)
SELECT * FROM EMPLOYEES WHERE TO_CHAR(HIRE_DATE, 'DD-MM-YYYY') > '25-04-2003';
2)
SELECT * FROM EMPLOYEES WHERE HIRE_DATE > TO_DATE('25-04-2003', 'DD-MM-YYYY');

7. 숫자를 문자열로
--- 1,234,567를 W1,234,567, $1,234,567, $1,234,567- 각각으로 출력하시오. 
SELECT TO_CHAR(1234567, 'L999,999,999'), TO_CHAR(1234567, '$999,999,999'), TO_CHAR(-1234566, '$999,999,999MI')
FROM DUAL;

8. 이름, 성, 직무 부서 그리고 급여를 세자리씩 ,를 찍고 $가 출력되게 하시오.
SELECT FIRST_NAME, LAST_NAME, DEPARTMENT_ID, JOB_ID, TO_CHAR(SALARY, '$999,999,999')
FROM HR.EMPLOYEES;
9. janette또는 JANETTE 또는 jaNette 값을 전달 받았다.
---   이름이 'Janette'인 사원을 출력하시오.
SELECT FIRST_NAME, EMPLOYEE_ID
FROM HR.EMPLOYEES
WHERE upeer(first_name) = 'JANETTE';
10. --- job_id이 'IT_PROG' 급여를 10%상승
--                  'ST_CLERK' 급여를 15%상승
--                  'SA_REP' 급여를 20%상승
--                   그이외는 급여
-- 성, 이름, 급여도 같이 출력 
SELECT JOB_ID, FIRST_NAME, LAST_NAME, SALARY,
CASE JOB_ID
WHEN 'IT_PROG' THEN SALARY * 1.1
WHEN 'ST_CLERK' THEN SALARY * 1.15
WHEN 'SA_REP' THEN SALARY * 1.2
ELSE SALARY END EX1
FROM HR.EMPLOYEES;

11. 성, 이름, 직무, 급여, 급여에 따른 직책도 같이 출력하세요.
--- 급여가 3000이하이면 사원 
--        5000이하이면 주임
--        7000이하이면 대리
--        9000이하이면 과장
--       11000이하이면 차장
--       13000이하이면 부장
--       그 이상 이면 임원
SELECT FIRST_NAME, LAST_NAME, JOB_ID, SALARY,
CASE
WHEN SALARY <= 3000 THEN '사원'
WHEN SALARY <= 5000 THEN '주임'
WHEN SALARY <= 7000 THEN '대리'
WHEN SALARY <= 9000 THEN '과장'
WHEN SALARY <= 11000 THEN '차장'
WHEN SALARY <= 13000 THEN '부장'
ELSE '임원' END EX1
FROM HR.EMPLOYEES;

12. 급여에 따른 세금을 출력하고 싶다. 이름 , 성, 급여, 직무, 세금을 출력하시오.
---  급여를 2000으로 나눈 몫이 0이면 급여의 0%
---                         1이면 급여의 9%
---                         2이면 급여의 20%
---                         3이면 급여의 30%
---                         4이면 급여의 40%
---                         5이면 급여의 42%
---                         6이면 급여의 44%
---                         이외 급여의 45% 세금이다.
-- trunc(salary / 2000)
SELECT FIRST_NAME, LAST_NAME, SALARY, JOB_ID,
CASE
WHEN TRUNC(SALARY / 2000) = 0 THEN SALARY * 0
WHEN TRUNC(SALARY / 2000) = 1 THEN SALARY * 0.09
WHEN TRUNC(SALARY / 2000) = 2 THEN SALARY * 0.2
WHEN TRUNC(SALARY / 2000) = 3 THEN SALARY * 0.3
WHEN TRUNC(SALARY / 2000) = 4 THEN SALARY * 0.4
WHEN TRUNC(SALARY / 2000) = 5 THEN SALARY * 0.42
WHEN TRUNC(SALARY / 2000) = 6 THEN SALARY * 0.44
ELSE SALARY * 0.45 END EX1
FROM HR.EMPLOYEES;

13. 성과 이름을 붙여서 출력하시오.
select '나의 이름은 ' || last_name || first_name || '입니다.'
from employees;
-- 위 코드를 concat을 사용해서 출력화시오.
SELECT CONCAT(CONCAT(CONCAT('나의 이름은', LAST_NAME), FIRST_NAME), '입니다.')
FROM HR.EMPLOYEES;


14. nvl
-- 성, 이름, 직무, 급여, 커미션을 포함한 년봉, null인 경우 0으로 
SELECT FIRST_NAME, LAST_NAME, JOB_ID, SALARY, NVL(SALARY * (COMMISSION_PCT + 1), 0)
FROM HR.EMPLOYEES;

15. nvl2
last_name, first_name, job_id, salary 를 출력할 때 nvl2를 이용해서 commission을 포함한 년봉을 구하시오.
SELECT 
  LAST_NAME,
  FIRST_NAME,
  JOB_ID,
  SALARY,
  NVL2(COMMISSION_PCT, SALARY * (1 + COMMISSION_PCT), SALARY) AS ANNUAL_SALARY
FROM 
  HR.EMPLOYEES;


16. nullif 
이름의 크기와 이메일의 크기를 비교해서 값이 같으면 null을 다르면 이름의 크기가 출력되게 하시오.
이름과 이메일도 같이 출력
SELECT FIRST_NAME, EMAIL, NULLIF(LENGTH(FIRST_NAME), LENGTH(EMAIL))
FROM HR.EMPLOYEES;
17.coalesce함수를 이용해서 년봉을 구하시오. 이름, 급여 커미션도 같이 출력
SELECT FIRST_NAME, SALARY, COMMISSION_PCT, SALARY, COALESCE(COMMISSION_PCT, SALARY, SALARY * (COMMISSION_PCT + 1))
FROM HR.EMPLOYEES;

--  다중행 함수
18. 급여를 제일 많이 받는 사람과 적게 받는 사람을 출력, 급여 평균
SELECT MAX(SALARY), MIN(SALARY), TRUNC(AVG(SALARY))
FROM HR.EMPLOYEES;

19. 급여를 받는 사람의 수와, 부서를 가지고 있는 사람의 수를 출력하시오.
SELECT COUNT(SALARY), COUNT(DEPARTMENT_ID)
FROM HR.EMPLOYEES;

20. 커미션을 받는 사원들의 커미션의 평균과 직원 전체의 커미션 평균을 구하시오.
SELECT AVG(COMMISSION_PCT)
FROM HR.EMPLOYEES
WHERE COMMISSION_PCT IS NOT NULL

21. 전체의 사원의 수를 구하시오. (행 전체의 갯수)
SELECT COUNT(EMPLOYEE_ID)
FROM HR.EMPLOYEES;

22. 제일 늦게 입사한 사원과 제일 처음에 입사한 사원을 출력하시오.
SELECT MAX(HIRE_DATE), MIN(HIRE_DATE)
FROM HR.EMPLOYEES;

23.직무에 'REP'를 가지고 있는 사원들 중 제일 많이 받는 급여와 적게 받는 급여를 출력,
--    평균 급여와 사원의 수, 급여의 합계 
SELECT 
  MAX(SALARY) AS MAX_SALARY,
  MIN(SALARY) AS MIN_SALARY,
  AVG(SALARY) AS AVG_SALARY,
  COUNT(*) AS EMPLOYEE_COUNT,
  SUM(SALARY) AS TOTAL_SALARY
FROM 
  HR.EMPLOYEES
WHERE 
  JOB_ID LIKE '%REP%';


24.80번 부서에서 커미션을 받는 사원의 수와 최대 커미션 값과 최소 커미션 값을 출력
--     부서에 속해 있는 사원의 수 
SELECT 
  COUNT(COMMISSION_PCT) AS EMPLOYEE_COUNT,
  MAX(COMMISSION_PCT) AS MAX_COMMISSION,
  MIN(COMMISSION_PCT) AS MIN_COMMISSION
FROM 
  HR.EMPLOYEES
WHERE 
  DEPARTMENT_ID = 80;

25. 중복되지 않은 부서들을 출력?
SELECT DISTINCT DEPARTMENT_ID
FROM HR.EMPLOYEES;
26. 중복되지 않은 부서의 수는?
SELECT COUNT(DISTINCT(DEPARTMENT_ID))
FROM HR.EMPLOYEES;
27. 커미션의 받는 사원의 커미션 평균과 
--    커미션을 받지 않는 사원을 포함한 커미션의 평균을 구하시오.
SELECT AVG(NVL(COMMISSION_PCT, 0)), AVG(COMMISSION_PCT)
FROM HR.EMPLOYEES;

28. 90인부서의 급여의 평균, 합계, 최대, 최소, 사원의 수
SELECT MAX(SALARY), MIN(SALARY), TRUNC(AVG(SALARY)), COUNT(EMPLOYEE_ID)
FROM HR.EMPLOYEES
WHERE DEPARTMENT_ID = 90;
29. 80인부서의 급여의 평균, 합계, 최대, 최소, 사원의 수
SELECT MAX(SALARY), MIN(SALARY), TRUNC(AVG(SALARY)), COUNT(EMPLOYEE_ID)
FROM HR.EMPLOYEES
WHERE DEPARTMENT_ID = 80;
30. 70인부서의 급여의 평균, 합계, 최대, 최소, 사원의 수
SELECT MAX(SALARY), MIN(SALARY), TRUNC(AVG(SALARY)), COUNT(EMPLOYEE_ID)
FROM HR.EMPLOYEES
WHERE DEPARTMENT_ID = 70;