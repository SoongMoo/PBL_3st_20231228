select *
from hr.employees;

select employee_id, first_name, last_name, hire_date, salary    ---컬럼명
from hr.employees;  ---projection

select email,first_name,salary,employee_id      ---칼럼 순서는 임의대로 가져올 수 있다.
from hr.employees;

select employee_id, first_name, hire_date, salary, salary*12
from hr.employees;

--- 사원번호, 이름, 입사일, 급여, 급여에 100을 더한 값에 *12를 곱하도록하자.
select employee_id, first_name, hire_date, salary, (salary+100)*12 as bonus
from hr.employees;

--- 사원번호, 성, 급여, 급여에 10%를 추가한 급여도 출력하세요.
select employee_id, first_name, salary, salary+salary*0.1 as bonus
from hr.employees;

select * from hr.employees;

---급여라는 리터럴을 줘서 그 밑으로 급여라는 말이 계속 출력되게끔
select employee_id, first_name, '급여', salary, '인센티브가 포함된 급여', salary + salary*0.1    
from hr.employees;

---null : 값이 없다 뜻이 아니다. 무슨 값인지 모른다
select null + 100 -- null에 어떠한 값을 부여해줘도 null이 된다.
from dual;

select employee_id,first_name,salary,salary+null
from hr.employees;

select employee_id,first_name,hire_date,salary,commission_pct
from hr.employees;

select employee_id,first_name,hire_date,salary,commission_pct,salary*commission_pct
from hr.employees;

select * from hr.employees;

--- 사원번호, 이름,성,급여,커미션,커미션을 포함한 연봉도 같이 출력하시오

select employee_id, first_name, last_name, commission_pct, (salary+salary*commission_pct)*12 year_sal
from hr.employees;  

select employee_id, first_name, last_name, commission_pct, (salary+salary*commission_pct)*12 as year_sal
from hr.employees;  

select employee_id, first_name, last_name, commission_pct, salary*(1+commission_pct)*12 year_sal
from hr.employees;

select employee_id, first_name, last_name, commission_pct, salary*(1+commission_pct)*12 "Year_Sal"
from hr.employees;

select employee_id, first_name, last_name, commission_pct, salary*(1+commission_pct)*12 "year_sal"
from hr.employees;

select employee_id, first_name, last_name, commission_pct, '년봉' ,salary*(1+commission_pct)*12 as "Year_Sal"
from hr.employees;

select employee_id as eid, commission_pct as comm
from hr.employees;

select last_name as "Name", salary * 12 as "Annual Salary"
from hr.employees;

-- 연결연산자
select  '오기영' || '이승윤'
from dual;

select employee_id,'이름 :' || last_name || ' ' || first_name as fullname, salary, job_id
from hr.employees;

-- 이름이 ellen 의 직업은 SA_REF 입니다.

select '이름이 '||first_name||' 의 직업은 '||JOB_ID||' 입니다.' as namejob
from hr.employees;

select '이름이 '||first_name||' 의 직업은 '||JOB_ID||' 입니다.' as namejob
from hr.employees
where first_name='Ellen';

select *
from hr.departments;

--Administration department is manager : 200
select department_name || ' department is manager : '||manager_id
from hr.departments;

--The manager of the Administration department's 200

select 'The manager of the '||department_name||' departments''s '||manager_id
from hr.departments;

select 'The manager of the' || department_name || q'[department's ]' ||manager_id
from hr.departments;

--중복행 제거

select employee_id, first_name, department_id
from hr.employees;

select DISTINCT department_id
from hr.employees;

-- 부서에서 급여가 같은 사원의 정보를 한번만 출력할때 부서와 급여만 출력하세요
select DISTINCT department_id, salary
from hr.employees;

-- 입사일이 같고 직무가 같은 사원 정보를 한번만 출력하세요. 입사일과 직무만 출력
select DISTINCT hire_date, job_id
from hr.employees;

--테이블정보를 확인 : 테이블에 있는 컬럼정보
select *
from hr.employees;

select *
from hr.employees;
desc hr.employees;

-- 원하는 열만 가져오는 것 : projection
-- 원하는 행만 가져오는 것 : selection


-- 사원번호, 이름, 급여, 입사일, 부서번호
select employee_id, first_name, salary, hire_date, department_id
from hr.employees;

-- 사원번호가 100인 사람의 정보만 가져오기
select employee_id, first_name, salary, hire_date, department_id
from hr.employees
where employee_id=100;

--사원들 정보중 사원번호, 이름, 급여, 직무를 출력하는데 직무가 FI_ACCOUNT 인 사원들만 출력하세요

select employee_id, first_name, salary, job_id
from hr.employees
where job_id = 'FI_ACCOUNT';

-- 90인 부서의 사원의 정보를 모두 출력하시오
select *
from hr.employees;

select *
from hr.employees
where department_id = 90;

--부서가 90 인 사원의 사원번호, 이름, 직무, 상사번호를 출력하세요
select employee_id, first_name, job_id, manager_id
from hr.employees
where department_id = 90;

select last_name, job_id, department_id
from hr.employees
where last_name='Whalen';

-- 03/06/17 : 2003년도 6월 17일에 입사한 직원을 출력
select *
from hr.employees
where hire_date = '03/06/17';

-- 사장보다 먼저 입사한 직원 정보를 출력하시오
select *
from hr.employees
where hire_date < '03/06/17';

-- 사장보다 늦게 입사한 사원의 직원 정보를 출력하시오.
select *
from hr.employees
where hire_date > '03/06/17';

-- 급여가 3000달러 이상인 사원을 출력하시오.

select *
from hr.employees
where salary >= 3000;

-- 직무가 IT_PROG이 아닌 직원의 사원번호, 이름, 입사일, 직무, 부서번호를 출력

select employee_id, first_name, hire_date, job_id, department_id
from hr.employees
where job_id != 'IT_PROG';

-- 급여가 2500부터 3000사이에 있는 직원 이름과 급여를 출력하시오

select first_name, salary
from hr.employees
where salary >= 2500 and salary <= 3000;

select first_name, salary
from hr.employees
where salary between 2500 and 3000;

--50인 부서의 직원을 출력하세요
--70인 부서의 직원을 출력하세요
--90인 부서의 직원을 출력하세요

select *
from hr.employees
where department_id=50;

select *
from hr.employees
where department_id=70;

select *
from hr.employees
where department_id=90;

select *
from hr.employees
where department_id in (50,70,90);

select *
from hr.employees
where department_id = 50 or department_id = 70 or department_id = 90;

--직원 이름이 'Vance'인 직원과 90인 부서의 직원을 출력하시오

select *
from hr.employees
where first_name ='Vance' or department_id=90;

--AD 로 시작하는 직무를 가진 사원들의 사원번호, 급여, 직무를 출력하세요

select *
from hr.employees
where job_id like 'AD%';

--성이 'Au' 로 시작하는 사원의 이름, 급여 직무, 부서번호를 출력하세요

select first_name, salary, job_id, department_id
from hr.employees
where last_name like 'Au%';

--직무가 'OG'로 끝나는 사원의 이름 직무를 출력하세요 

select first_name, job_id
from hr.employees
where job_id like '%OG';

--한글자 다음이 T인 직무를 가진 사원의 모든 정보 출력
select *
from hr.employees
where job_id like '_T%';

--두글자 다음이 e인 이름을 가진 직원의 모든 정보 출력
select *
from hr.employees
where first_name ='__e%';

--AD_로 시작하는 직무를 가진 사원 정보를 출력
select *
from hr.employees
where job_id like 'AD\_%' ESCAPE '\';

-- PR를 포함하고 있는 직무를 가진 사원 정보를 출력

select *
from hr.employees
where job_id like '%PR%';

--부서가 없는 직원을 출력하시오.
select *
from hr.employees
where department_id is null;

--부서가 있는 직원들을 출력하시오
select *
from hr.employees
where department_id is not null;

--50인 부서와 60인 부서와 70인 부서의 직원을 구하시오
select *
from hr.employees
where department_id in (50,60,70);

select *
from hr.employees
where department_id not in(50,60,70);























