select *
from hr.employees;

--- * 하거나 테이블이 갖고있는 컬럼 리스트를 적어준다.
select employee_id, first_name, last_name, hire_date, salary --- 컬럼명,...
from hr.employees; --- 일부 컬럼만 가져오는것을 projection

select email, first_name, salary, employee_id --- 컬럼 순서는 임의대로 가져올 수 있다.
from hr.employees;

--- 사원번호, 이름, 입사일, 급여, 급여에 100을 더한 값에 12를 곱하도록 하자.
select employee_id, first_name, salary, (salary + 100) * 12 -- 최우선 연산자 사용
from hr.employees;

--- 사원번호, 성, 급여에 10%를 추가한 급여도 출하세요.
select employee_id, last_name, salary, salary + salary * 0.1
from hr.employees;

select * from hr.employees; -- 모든 컬럼명을 보여준다. 컬럼명을 알아야하기때문에..

--- 스칼라 또는 리터럴이라고 한다.
select employee_id, first_name, '급여', salary, '인센티브가 포함된 급여', salary + salary * 0.1
from hr.employees;

--- null : 값이 없다는 뜻이 아니다. 무슨 값인지 모른다라는 뜻이다.
select null + 100 --- null에 어떠한 값을 더해도 null이 된다.
from dual;

--- 알고있는 값이어도 null을 주게되면 null이 된다.
select employee_id, first_name, salary, salary + null
from hr.employees;

select employee_id, first_name, hire_date, salary, commission_pct
from hr.employees;

select employee_id, first_name, hire_date, salary, commission_pct, salary * commission_pct
from hr.employees;

--- 사원번호, 이름, 성, 급여, 커미션, 커미션을 포함한 연봉도 같이 출력하시오
select employee_id, first_name, last_name, salary, commission_pct, salary * ( 1 + commission_pct) * 12
from hr.employees;

--- alias : 별칭 주기
select employee_id, first_name, salary, commission_pct
    , salary * (1 + commission_pct) * 12 year_sal
from hr.employees;
--- 쿼리문은 대,소문자를 구별하지 않는다. 헤딩네임은 대문자로 고정
select employee_id, first_name, salary, commission_pct
    , salary * (1 + commission_pct) * 12 as year_sal
from hr.employees;
--- 대,소문자를 구별하여 출력하고싶으면 더블쿼테이션 크게 의미는 없다.
select employee_id, first_name, last_name, salary, commission_pct
    , salary * (1 + commission_pct) * 12 "Year_Sal"
from hr.employees;
--- 공백 문자를 사용하고 싶을때도 더블 쿼테이션을 사용. 별칭을 줄때 as를 붙여줘도 상관없다.
--- 문자열 리터럴은 싱글 쿼테이션 ''을 사용해서 표현한다
select employee_id, first_name, last_name, salary, commission_pct
    , '연봉' , salary * (1 + commission_pct) * 12 as "year sal"
from hr.employees;

select employee_id as eid, commission_pct as comm
from hr.employees;

select last_name "Name", salary * 12 "Annual Salary"
from hr.employees;

select '이숭무' || '이상범' --- ||를 연결 연산자라고한다
from dual;

select * from hr.employees;

select employee_id, ' 이름 : ' || last_name || ' ' || first_name as name, salary, job_id
from hr.employees;

--- 이름이 Ellen의 직업은 SA_REP입니다.
select ' 이름이 ' || first_name || '의 직업은 ' || job_id || ' 입니다' as employees
from hr.employees;
--- 리터럴 문자열 문자, 숫자 또는 날짜 싱글 쿼테이션을 찍어준다
select first_name || last_name
from hr.employees;

---
select * from hr.employees;
select * from hr.departments;
--- Administration department is manager : 200
select department_name || 'department is manager : ' || manager_id
from hr.departments;

--- The manager of the Administration department's 200
select 'The manager of the ' || department_name || ' department''s ' || manager_id
from hr.departments;
--- 가독성이 크게 문제가 되지 않기때문에 위에것을 많이 쓴다.
select 'The manager of the ' || department_name || q'[ department's ]' || manager_id
from hr.departments;

--- 중복행 제거
select employee_id, first_name, department_id
from hr.employees;
--- 부서 번호만 출력
select department_id from hr.employees;
--- 부서 번호를 한번만 출력하세요. (중복제거)
select distinct department_id from hr.employees;

--- 부서에서 급여가 같은 사원의 정보를 한번만 출력할때 부서와 급여만 출력하세요
select distinct department_id, salary from hr.employees;

--- 입사일이 같고 직무가 같은 사원 정보를 한번만 출력하세요 입사일과 직무만 출력
select distinct hire_date, job_id from hr.employees;
--- distinct가 가장 앞에 있어야하기때문에 이 앞에 무언가가 올 수 없다.


--- 테이블의 정보를 확인 : 테이블에 있는 컬럼 정보
select * from hr.employees;
DESCRIBE hr.employees; --- describe을 사용해도 불러올 수 있다.
desc hr.employees; --- desc로도 가능

--- 원하는 열만 가져오는걸 Projection
--- 원하는 행만 가져오는걸 Selection
--- 사원 번호, 이름, 급여, 입사일, 부서번호
select employee_id, first_name, salary, hire_date, department_id
from hr.employees;
--- 100번 사원의 정보만 가져오시오
select employee_id, first_name, salary, hire_date, department_id
from hr.employees
where employee_id = 100;
--- where는 selection할때 사용하는것

--- 사원들 정보 중 사원번호, 이름, 급여, 직무를 출력하는 데
--- 직무가 FI_ACCOUNT인 사원들만 출력하세요.
select employee_id, first_name, salary, job_id
from hr.employees
where job_id = 'FI_ACCOUNT'; --- 싱글 쿼테이션 사용, 대,소문자 구분하기때문에 맞춰서 써야함.

--- 90인 부서의 사원의 정보를 모두 출력하시오.
select * from hr.employees
where department_id = 90;

--- 부서가 90인 사원의 사원 번호, 이름, 직무, 상사 번호를 출력하세요
select employee_id, first_name, job_id, manager_id
from hr.employees
where department_id = 90;
--- 'Whalen'을 출력
select last_name, job_id, department_id
from hr.employees
where last_name = 'Whalen'; --- 실제 저장되어있는 데이터를 그대로 입력해줘야 가져올 수 있다.

--- 03/06/17 : 2003년도 6월 17일에 입사한 직원을 출력
select * from hr.employees
where hire_date = '03/06/17';
--- 사장보다 먼저 입사한 직원 정보를 출력하시오.
select * from hr.employees
where hire_date < '03/06/17';

--- 사장보다 늦게 입사한 사원의 모든 정보를 출력하세요.
select * from hr.employees
where hire_date > '03/06/17';

--- 급여가 3000달러 이상인 사원을 출력하세요..
select * from hr.employees
where salary >= 3000;

--- 직무가 IT_PROG이 아닌 직원의 사원 번호, 이름, 입사일, 직무, 부서 번호를 출력하세요..
select employee_id, first_name, hire_date, job_id, department_id
from hr.employees
where job_id != 'IT_PROG';

--- 급여가 2500부터 3000사이에 있는 직원의 이름과 급여를 출력하시오.
select first_name, salary
from hr.employees
where salary >= 2500 and salary <= 3000;

select first_name, salary
from hr.employees
where salary between 2500 and 3000;
--- between을 이용하면 A와 B 사이 (영어 뜻 그대로)
--- 50인 부서의 직원을 출력하세요
--- 70인 부서의 직원을 출력하세요
--- 90인 부서의 직원을 출력하세요
select * from hr.employees where department_id in (50, 70, 90); --- 특별한 경우가 아니면 이걸 쓰면 된다.
select * from hr.employees
where department_id=50 or department_id=70 or department_id=90;

--- 직원 이름이 'Vance'인 직원과 부서가 90인 부서의 직원을 출력하시오
select * from hr.employees where first_name = 'Vance' or department_id = 90;
--- 직무가 'AD'로 시작한 직무를 가진 사원들의 사원 번호, 이름, 급여, 직무를 출력하세요.
select employee_id, first_name, salary, job_id
from hr.employees
where job_id like 'AD%'; --- 패턴 일치 검색 like 연산자

--- 성이 'Au'로 시작하는 사원의 이름, 급여, 직무, 부서번호를 출력하세요.
select first_name, last_name, salary, job_id, department_id
from hr.employees
where last_name like 'Au%';

--- 직무가 'OG'로 끝나는 사원의 이름, 직무를 출력하세요.
select first_name, job_id from hr.employees
where job_id like '%OG';

--- 한글자 다음이 T인 직무를 가진 사원의 모든 정보를 출력하세요.
select * from hr.employees
where job_id like '_T%'; --- _는 무조건 한글자라는 뜻, %는 모든

--- 두글자 다음이 'e'인 이름을 가진 직원의 모든 정보를 출력하세요.
select * from hr.employees
where first_name like '__e%';

--- 두글자 다음이 'e'로 끝나는 이름을 가진 직원의 모든 정보를 출력하세요.
select * from hr.employees
where first_name like '__e'; --- %가 없어도 like가 들어감

---
select * from hr.employees;
--- AD_로 시작하는 직무를 가진 사원 정보를 출력
select * from hr.employees
where job_id like 'AD\_%' ESCAPE '\';

--- PR를 포함하고 있는 직무를 가진 사원 정보를 출력
select * from hr.employees
where job_id like '%PR%';

--- 이름이 이숭무가 포함되어 있는
select * from hr.employees
where first_name like '%이숭무%';
--- 양쪽에 %%붙이는거 많이 사용함

select * from hr.employees;
--- 부서가 없는 직원을 출력하시오
select * from hr.employees
where department_id is null; --- 정해지지 않은 값이기때문에 is를 쓴다.
--- 부서가 있는 직원들을 출력하세요
select * from hr.employees
where department_id is not null; --- 잘 기억

--- 50인 부서와 60인 부서와 70인 부서의 직원을 구하시오.
select * from hr.employees
where department_id in (50,60,70);
--- 50인 부서와 60인 부서와 70인 부서가 아닌 직원을 구하시오.
select * from hr.employees
where department_id not in (50,60,70);

--- 프로젝션 : 원하는 열만 가져오도록 한다.
select * from hr.employees;
--- 1. 직원번호, 이름 , 이메일, 입사일
select employee_id, first_name, email, hire_date
from hr.employees;
--- 2. 직원번호, 이름 , 급여, 각 사원 급여에 100 더하시오
select employee_id, first_name, salary + 100
from hr.employees;
--- 3. 직원번호, 성, 입사일, 직무, 연봉을 출력하시오
--- 각행에 있는 열에 수식을 사용가능
select employee_id, first_name, hire_date, job_id, salary * 12
from hr.employees;
--- 부서정보
select * from hr.departments;
--- 4. 주소번호, 부서번호, 부서장번호, 부서명순으로 출력
--- 컬럼의 순서를 무작위로 사용가능
select location_id, department_id, manager_id, department_name
from hr.departments;
--- 5. 사원테이블에서 직원번호, 입사일, 성, 급여순으로 출력
--- 컬럼의 순서를 무작위로 사용가능
select employee_id, hire_date, last_name, salary
from hr.employees;
-- 6. 연산:
-- 사원테이블에서 사원번호, 부서번호 , 직무, 연봉을 출력하는데
-- 매월 300씩 보너스가 지급이 된다.
select employee_id, department_id, job_id, (salary + 300) * 12
from hr.employees;
--- 7. 사원테이블에서 사원번호, 부서번호 , 직무, 연봉을 출력하는데
--- 마지막 달에 300이 특별 보너스로 지급이 된다.
select employee_id, department_id, job_id, salary * 12 + 300
from hr.employees;
--- 8. 사원테이블에서 사원번호, 성, 이메일 , 급여에 대한 커미션이 30%씩 지급이될 때
--- 커미션 까지 출력하시오.
select employee_id, last_name, email, salary, salary + salary * 0.3
from hr.employees;
--- 9.  사원테이블에서 직원번호 이메일 이름 입사일 급여, 커미션퍼센트를 출력
select employee_id, email, first_name, hire_date, salary, commission_pct
from hr.employees;
-- 10을 출력하시오
select 10 from dual;
-- 10에  null을 곱하시오.
select 10 * null from dual;
--- 10. 사원테이블에서 직원번호 이메일 이름 입사일 급여, 커미션퍼센트를 출력하는데
--- 각 사원이 받는 커미션의 금액도 같이 출력하시오.
select employee_id, email, first_name, hire_date, salary, commission_pct, salary * commission_pct + 1
from hr.employees;
select * from hr.employees;
-- 11. 직원번호, 이메일, 이름, 입사일, 연락처, 부서번호, 급여, 커미션퍼센트,
-- 그리고 커미션이 포한된 연봉을 출력하시오,
select employee_id, email, first_name, hire_date, phone_number, salary, commission_pct, (salary * 12) * (commission_pct + 1)
from hr.employees;
--- 12. heading name에 별칭 주기
--- 사원번호 eid로 이메일, 성은 lname으로 입사일은 hd로 연락처는 ph로 부서번호는 did로 급여는 sal로 커미션은 comm으로
--- 커미션을 포함한 년봉은 year_sal로 별칭를 줘서 출력하시오. 단 eamil은 별칭을 주지 않는다.
select employee_id eid, email, last_name lname, hire_date hd, phone_number ph, department_id did, salary sal, commission_pct comm, (salary * 12) * (commission_pct + 1) year_sal
from hr.employees;
--- 13. 위내용을 별칭에 as 사용
select employee_id as eid, email, last_name as lname, hire_date as hd, phone_number as ph, department_id as did, salary as sal, commission_pct as comm, (salary * 12) * (commission_pct + 1)  as year_sal
from hr.employees;
--- 14. employee_id,  '나의 성은 last_name' , first_name , 급여를 출력하세요.
select employee_id, '나의 성은 ' || last_name, first_name, salary
from hr.employees;
--- 15 사원번호, 이름 급여 부서번호를 출력할 때  리터널 날짜 2021-11-19와 숫자 35를  같이 출력하세요.
select employee_id, first_name, salary, department_id, ' 2021-11-19 ' || 35
from hr.employees;
--- 16. 직원번호, last_name first_name(KingSteven),급여, 직무 출력
select employee_id, last_name || first_name, salary, job_id
from hr.employees;
--17. 16번문제에서 성과 이름에 공백문자를 넣자.
select employee_id, last_name || ' ' || first_name, salary, job_id
from hr.employees;
-- 18. 사원번호와 급여를 출력하는 사이에 아래 내용이 출력되게 하시오.
-- "KingSteven의 직무는 AD_PRES입니다"로 출력하자.
select employee_id, last_name || first_name || '의 직무는 ' || job_id || '입니다', salary
from hr.employees;
-- 19. 직원의 부서번호만 출력하시오.
select department_id from hr.employees;
-- 20. 직원의 부서를 모두 출력하지 말고 한번씩만 출력하시오.
-- 직원이 속해있는 부서가 어떠한 부서들인지 알고 싶다.
select distinct department_id from hr.employees;
--- 직무와 부서가 같은 사원은 직무와 부서를 출력할 때 한번만 출력하시오.
select distinct job_id, department_id from hr.employees;
--- 21. 직무와 입사일이 중복되지 않게 출력하시오.
select distinct job_id, hire_date from hr.employees;
--- 22. 90인 부서의 사원들을 출력하시오.
select * from hr.employees
where department_id = 90;
--- 23. 사원번호, 성, 이름, 급여를 출력
select employee_id, last_name, first_name, salary
from hr.employees;
-- 24. 90인 부서의 사원들을 출력할 때 사원번호, 이름 , 성, 급여 출력
select employee_id, first_name, last_name, salary
from hr.employees
where department_id = 90;
--- 25. 이름이 'Nancy'인 사원의 입사일 , 직무, 급여, 커미션퍼센트를 출력하세요.
--- 문자열 리터널인 경우에는 대소문자를 구분하여 사용해야 한다.
select hire_date, job_id, salary, commission_pct
from hr.employees
where first_name = 'Nancy';
--- 26. 입사일이 06/01/03인 사원을 출력하시오.
select * from hr.employees
where hire_date = '06/01/03';
--- 비교 연산(관계연산) :  =, >, >=, <, <=, <>, !=, ^=
--- 27. 급여가 3000이상인 사원들의 성, 급여를 출력하시오.
select last_name, salary from hr.employees
where salary >= 3000;
--- 28. 입사일이 06/01/03보다 늦게 입사한 직원의 사원번호 이름 급여를 출력하시오.
select employee_id, first_name, salary from hr.employees
where hire_date > '06/01/03';
--- 30. 급여가 3000이 아닌 사원을 모두 출력하시오.
select * from hr.employees
where salary != 3000;
--- 31. 급여가 2500에서 3500사이인 사원들 중 사원번호와 이름, 급여, 직무, 입사일을 출력
select employee_id, first_name, salary, job_id, hire_date
from hr.employees
where salary between 2500 and 3500;
--- 32. 성이 King부터  Smith사이에 있는 사원들을 출력하시오.
select * from hr.employees
where last_name between 'King' and 'Smith';
--- 33. 입사일이 02/06/07부터 06/01/03사이에 입사한 사원들을 출력하시오.
select * from hr.employees
where hire_date between '02/06/07' and '06/01/03';
--- 50인 부서의 사원을 출력
select * from hr.employees
where department_id = 50;
--- 70인 부서의 사원을 출력
select * from hr.employees
where department_id = 70;
--- 90인 부서의 사원을 출력
select * from hr.employees
where department_id = 90;
--- 34. 50, 70, 90인 부서의 사원들을 출력하세요.
select * from hr.employees
where department_id in (50,70,90);
--- 35. 상사가 100,101,102인 사원들을 구하시오.
select * from hr.employees
where manager_id in (100,101,102);
-- 36. 성이 'Hartstein', 'Vargas'인 사원들을 출력하시오.
select * from hr.employees
where last_name in ('Hartstein','Vargas');
-- 37. 사장의 직원번호는 100번이다. 사장이 직속상사인 사원은?
select * from hr.employees
where manager_id = 100;
--- like
--- 38. 성에 s가 포함되어 있는 직원을 출력하세요.
select * from hr.employees
where last_name like '%s%';
--- 39. 직무에 'CL'이 포함한된 사원들을 출력하시오.
select * from hr.employees
where job_id like '%CL%';
--- 40. 직무에 'ST'이 포함한된 사원들을 출력하시오
select * from hr.employees
where job_id like '%ST%';
--- 41. 이름이 'B'로 시작하는 지원을 출력하세요.
select * from hr.employees
where first_name like 'B%';
--- 42. 이름이 'a'로 끝나는 지원을 출력하세요.
select * from hr.employees
where first_name like '%a';
--- 43. 02년도에 입사한 사원?
select * from hr.employees
where hire_date like '02%';
--- 44. 02월에 입사한 사원은? --52번에 답
select * from hr.employees
where hire_date like '___02%';
--- 45. 이메일에 두번째 글자가 'K'인 사원을 출력하시오.
select * from hr.employees
where email like '__K%';
-- 46. 성에 두번째 글자가 'o'인 사원을 출력하시오.
select * from hr.employees
where last_name like '__o%';
-- 47. 이메일에 세번째 글자가 'A'시작하는 사원?
select * from hr.employees
where email like '___A%';
-- 48. 이메일에 세번째 글자가 'O'시작하는 사원?
select * from hr.employees
where email like '___O%';
-- 49. 이메일의 마지막에서 두번째 글자 'O'인 사원은?
select * from hr.employees
where email like '%O__';
-- 50. 이메일의 앞에서 두번재가 K이고 뒤에서 두번째가 'O'인 사원을 출력하시오.
select * from hr.employees
where email like '__K%O__';
-- 51. IT_로 시작하는 직무를 구하시오
select * from hr.employees
where job_id like 'IT\_%' ESCAPE '\';
-- 52. 02월에 입사한 사원들을 출력하세요.
select * from hr.employees
where hire_date like '___02%';
-- null
-- 53. 커미션을 받지 못하는 직원들을 출력하시오.
select * from hr.employees
where commission_pct is null;
-- 54. 상사가 없는 직원을 출력하시오.
select * from hr.employees
where manager_id is null;
-- 55. 부서에 부서장이 없는 부서정보를 출력하세요.
select * from hr.departments
where manager_id is null;
---56. 부서가 없는 직원을 출력하시오.
select * from hr.employees
where department_id is null;
--- 논리 연산자.. or, and : 부울타입과의 연산
-- 57. 직무가 AD_VP이면서 부서번호가 90인 사원들을 출력하세요.
select * from hr.employees
where job_id = 'AD_VP' and department_id = '90';
-- 58. 급여가 10000이상이면서 직무에 'MAN'포함되어 있는 사원은?
select * from hr.employees
where salary >= 10000 and job_id like '%MAN%';
-- 59. 급여가 5000부터 10000사이인 사원을 구하시오.
select * from hr.employees
where salary between 5000 and 10000;
-- 60. 입사일이 03/06/17에서 05/09/21사이에 입사한 사원을 출력하시오.and사용
select * from hr.employees
where hire_date between '03/06/17' and '05/09/21';
-- 61. 급여가 10000이상인 사원을 출력
select * from hr.employees
where salary >= 10000;
-- 62. 직무에 'MAN'을 포함하고 있는 사원을 출력
select * from hr.employees
where job_id like '%MAN%';
-- 63. 61의 결과와 62의 결과를 같이 출력하세요.
select * from hr.employees
where salary >= 10000 and job_id like '%MAN%';
--- 급여가 10000이상인 사람과 직무가 MAN을 포함하고 있는 사람을 출력하세요.
select * from hr.employees
where salary >= 10000 or job_id like '%MAN%';
--- 64. 부서가 100인 사원과 직무가 'SA_REP'인 사원을 출력하시오.
select * from hr.employees
where department_id = 100 or job_id = 'SA_REP';
--- 65.  부서가 100이면서 직무가 'SA_REP'인 사원을 출력하시오.
select * from hr.employees
where department_id = 100 and job_id = 'SA_REP';
--- 66. 직무가 'AD_PRES', 'AD_VP', 'IT_PROG'인 사원을 출력하세요
select * from hr.employees
where job_id in ('AD_PRES','AD_VP','IT_PROG');
--- select * from employees 
--- where job_id='AD_PRES' or job_id='AD_VP' or job_id='IT_PROG';
--- 직무가 IT_PROG이거나 직무가 ST_MAN이면서 급여가 6000이상인 사원을 출력하시오.
select * from hr.employees
where job_id = 'IT_PROG' or job_id = 'ST_MAN' and salary >= 6000;
-- 67. 직무가 'AD_PRES', 'AD_VP', 'IT_PROG'에 해당하지 않은 사원을 출력하세요
select * from hr.employees
where job_id not in ('AD_PRES','AD_VP','IT_PROG');
-- 68. 급여가 6000보다 작거나  10000보다 큰 사원을 출력하세요.
select * from hr.employees
where salary < 6000 or salary > 10000;
-- 69. 커미션을 받지않는 사원들을 구하시오.
select * from hr.employees
where commission_pct is null;
-- 커미션을 받는 사원들을 출력하세요.
select * from hr.employees
where commission_pct is not null;
-- 70.  부서테이블에서 부서장이 있는 부서를 출력하시오.
select * from hr.departments
where manager_id is not null;