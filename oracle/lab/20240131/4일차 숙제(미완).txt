---  1. 각 부서별 부서의 급여의 평균, 합계, 최대, 최소, 사원의 수
select department_id, avg(salary), sum(salary), max(salary), min(salary), count(*)
from hr.employees
group by department_id;

2. 같은 직무를 하는 사원들 중 제일 먼저 들어 온 사원가 제일 늦게 들어온 사원의 
---    입사일을 출력하시오.
select max(hire_date), min(hire_date)
from hr.employees;


3. 사원번호,  이름, 입사일, 직무, 부서를 출력할 때.
부서는 오름차순으로 정렬하고 각 부서의 직무를 오름차순으로 정렬하여 출력하시오.   
select employee_id, first_name, hire_date, job_id, department_id
from hr.employees
order by department_id, job_id;


4.  각 부서의 직무별 급여 평균 , 합계, 담당하는 사원의 수를 출력
select department_id, avg(salary), sum(salary), count(*)
from hr.employees
group by department_id;

5. 90부서에서 직무별 급여 합계와 평균 구하시오.
select department_id, avg(salary), sum(salary)
from hr.employees
group by department_id
having department_id = 90;

6. 각부서에서 직무가 같은 사원들 중 입사일이 같은 사원의 수를 구하시오.
 사원수가 5명이상만 출력
select department_id, count(*)
from hr.employees
group by department_id
having  count(*) >= 5;

7. 평균급여가 5000이상인 부서만 출력하시오.평균 급여 높은 것 부터 출력하시오.
select department_id, avg(salary), sum(salary)
from hr.employees
group by department_id
having avg(salary) >= 5000
order by avg(salary);

8. 부서의 직원 수가 10명 미만이 부서를 출력하시오.
select department_id, count(*)
from hr.employees
group by department_id
having  count(*) < 10;

9. 직무에 'REP'가 포함되어 있지 않은 직무별 급여의 평균, 합계, 최소, 
--- 최대 값을 출력할때 급여의 합계가 13000이상인 직무만 출력하시오.
select job_id, avg(salary), sum(salary), min(salary), max(salary)
from hr.employees
where job_id not in '%REP%'
group by job_id
having sum(salary) >= 13000;



10.  사원의 성, 급여 , 입사일, 직무를 출력할 대 직무명도 같이 출력하시오.
select * from hr.jobs;

select last_name, salary, hire_date
    , j.job_id, job_title
from hr.employees e join hr.jobs j
on  e.job_id = j.job_id;


11. 부서 테이블에서 90인 부서정보를 출력하시오.
select *
from hr.employees
where department_id = '90';

12. 90인 부서의 직원을 구하시오, -- 컬럼은 임의로
select department_id, count(*)
from hr.employees
where department_id = '90'
group by department_id;


13. 100번 사원 정보를 출력하시오.-- 컬럼은 임의로
select *
from hr.employees
where department_id = '100';

14. 11부터 13번까지을 한번에 출력하세요.-- 컬럼은 임의로


select * from hr.departments;
15. 직원번호, 성, 이름, 급여, 직무, 부서번호, 지역번호, 부서명을 출력 
select employee_id, last_name, first_name, salary, job_id
    , d.department_id, location_id, department_name
from hr.employees e join hr.departments d
on e.department_id = d.department_id;

16. 직원번호 .성, 이름 급여 부서번호, 부서명을 100사원만 출력하시오.
select employee_id, last_name, first_name, salary
    , d.department_id, department_name
from hr.employees e join hr.departments d
on e.department_id = d.department_id
where e.employee_id = 100;
17. 직원 번호, 성, 이름 , 직무, 직무명을 출력하세요.
T-SQL Join , Ansi-Join(inner Join, NATURAL JOIN , using절)모두 구현할 것

select employee_id, last_name, first_name
    , j.job_id, job_title
from hr.employees e, hr.jobs j
where e.job_id = j.job_id;

select employee_id, last_name, first_name
    , j.job_id, job_title
from hr.employees e join hr.jobs j
on e.job_id = j.job_id;

select employee_id, last_name, first_name
    , job_id, job_title
from hr.employees natural join hr.jobs;

select employee_id, last_name, first_name
    , job_id, job_title
from hr.employees  join hr.jobs 
using(job_id);

18. 부서장이 상사인 직원을 구하시오.
  직원번호, 성, 급여 입사일, 부서번호, 부서장번호를 출력하시오.
T-SQL Join , Ansi-Join(inner Join, NATURAL JOIN , using절)모두 구현할 것

select employee_id, last_name, salary, hire_date
    , d.department_id, d.manager_id
from hr.employees e, hr.departments d
where e.department_id = d.department_id;

select employee_id, last_name, salary, hire_date
    , d.department_id, d.manager_id
from hr.employees e join hr.departments d
on e.department_id = d.department_id;


select employee_id, last_name, salary, hire_date
    , department_id, manager_id
from hr.employees natural join hr.departments;


select employee_id, last_name, salary, hire_date
    , e.department_id, manager_id
from hr.employees e join hr.departments d
using(department_id);
왜안되는거지


19. 성 이름 직원번호 , 전화번호 , 급여 부서번호, 부서명을 출력
T-SQL Join , Ansi-Join(inner Join, NATURAL JOIN , using절)모두 구현할 것

select last_name, first_name, employee_id
    , d.department_id, department_name
from hr.employees e , hr.departments d
where e.department_id = d.department_id;

select last_name, first_name, employee_id
    , d.department_id, department_name
from hr.employees e join hr.departments d
on e.department_id = d.department_id;

select last_name, first_name, employee_id
    , department_id, department_name
from hr.employees e natural join hr.departments d;


select last_name, first_name, employee_id
    , department_id, department_name
from hr.employees join hr.departments
using(department_id);

20. 각 부서의 부서의 정보와 부서장의 이름을 출력 하시오
select last_name, first_name, employee_id
    , d.department_id, department_name
from hr.employees e join hr.departments d
on e.department_id = d.department_id;

21. 직원 번호, 직무 번호 , 직무내용 


22. 직원번호, 부서번호, 부서명


23. 각 직원의 직원번호, 직무번호, 직무 내용, 부서번호, 부서명
T-SQL Join , Ansi-Join(inner Join, NATURAL JOIN , using절)모두 구현할 것

24. 부서장의 직무내용을 출력하시오. 부서장 번호, 직무내용,

25. 부서가 없는 직원도 같이 출력

26. 직원이 없는 부서 를 출력

27. 부서가 없는 직원과 직원이 없는 부서까지 모두 출력
